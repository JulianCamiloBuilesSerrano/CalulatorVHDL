LIBRARY IEEE;
USE ieee.std_logic_1164.all;
-------------------------------------------------------
ENTITY multiply IS
   PORT(      a           : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	           b           : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
				  product     : OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
END ENTITY multiply;
-------------------------------------------------------
ARCHITECTURE structural OF multiply IS

SIGNAL k: STD_LOGIC_VECTOR(15 DOWNTO 0);

SIGNAL l: STD_LOGIC_VECTOR(3 DOWNTO 0);  

SIGNAL answer_1: STD_LOGIC_VECTOR(3 DOWNTO 0);

SIGNAL answer_2: STD_LOGIC_VECTOR(3 DOWNTO 0);

SIGNAL answer_3: STD_LOGIC_VECTOR(3 DOWNTO 0);

SIGNAL salida: STD_LOGIC_VECTOR(2 DOWNTO 0);

BEGIN

k(0) <= a(0) AND b(0);

k(1) <= a(1) AND b(0);

k(2) <= a(2) AND b(0);

k(3) <= a(3) AND b(0);

k(4) <= a(0) AND b(1);

k(5) <= a(1) AND b(1);

k(6) <= a(2) AND b(1);

k(7) <= a(3) AND b(1);

k(8) <= a(0) AND b(2);

k(9) <= a(1) AND b(2);

k(10) <= a(2) AND b(2);

k(11) <= a(3) AND b(2);

k(12) <= a(0) AND b(3);

k(13) <= a(1) AND b(3);

k(14) <= a(2) AND b(3);

k(15) <= a(3) AND b(3);

l <= '0'& k(12) & k(8) & k(4);

adittion_1: ENTITY work.sum4bits PORT MAP(a => l, b => k(1) & k(5) & k(9) & k(13), Cin => '0', s => answer_1, Cout => salida(0));

adittion_2: ENTITY work.sum4bits PORT MAP(a => answer_1(1) & answer_1(2) & answer_1(3) & salida(0), b => k(2) & k(6) & k(10) & k(14), Cin => '0', s => answer_2, Cout => salida(1));

adittion_3: ENTITY work.sum4bits PORT MAP(a => answer_2(1) & answer_2(2) & answer_2(3) & salida(1), b => k(3) & k(7) & k(11) & k(15), Cin => '0', s => answer_3, Cout => salida(2));

product <= k(0) & answer_1(0) & answer_2(0) & answer_3 & salida(2); 

END ARCHITECTURE structural;